
<%# imported local variables: [mandatory] model, [optional] destroyable (Boolean. At the model level like association prohibition (so that the button is dimmed), NOT the controller/user level), permission_level [Symbol, String] (:editor (Def), :moderator, :any; used for CSS) %>
<%# NOTE: "Destroy button" is NOT displayed at all if it is not editable (not permitted to edit) for the user at all.  The disabled button is displayed if it is not destoyable due to, for example, the presence of the dependent children. %>
<%# @example:  render partial: 'layouts/show_edit_destroy', locals: {model: @my_model, destroyable: !@my_model.child_cars.exists?} %>
<%# TODO: This should be merged to _link_edit_destroy_index.html.erb %>

<% if !defined? destroyable
     destroyable = nil
   end %>  <%# This has to be written over multiple lines. %>
<% if !defined? permission_level
     permission_level = :editor
   end %>  <%# This has to be written over multiple lines. %>

<% permission_level ||= :editor %>

<%= editor_only_safe_html(model, method: :update, only: permission_level, tag: "div") do %> <%# defined in application_helper.rb %>
  <%= tag.section id: ApplicationController::CSS_CLASSES[:show][:sec_id_edit_destroy_in_show] do %>
    <%= tag.span class: ["lead"] do %>
      <%= link_to "Edit this #{model.class.name}", Rails.application.routes.url_helpers.polymorphic_path(model, action: :edit, only_path: true), class: "edit_link", data: { turbo_frame: "_top" } %>
    <% end %>

    <% if can?(:destroy, model) %>
      <%= tag.span class: ["text-end"] do %>
        <% if destroyable %>
          <%= button_to "Destroy", model, method: :delete, data: { confirm: t('are_you_sure') } %>
        <% else %>
          <form class="button_to"><input disabled="disabled" type="submit" value="Destroy"></form>
        <% end %>
      <% end %>
    <% end %>
  <% end %>
<% end %>

