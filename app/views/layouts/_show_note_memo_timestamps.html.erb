<%# local vars: model, (optional) model4ability (Model or Boolean), show_weight(Boolean (Def: true)), show_timestamp(Boolean) %>
<%#   NOTE: model4ability may be a model instance or model class or Boolean, used for an Ability check. In default (if not given), model is used.  If TrueClass, the boolean value is used, skipping the ability check, where the value is interpreted as the permission to display Editor's Note. %>
<%#   NOTE: If the model does not have "memo_editor" it is simply not displayed. %>
<%#   NOTE: If the model has a weight, unless show_weight is given false, it is displayed as editor-only. %>
<%#   NOTE: This also shows create/update_user column if the model has them. %>
<%#   NOTE: If show_timestamp (Boolean) is not given, the same check for model4ability is applied. %>

<%# USAGE:  render partial: 'layouts/show_note_memo_timestamps', locals: {model: music, model4ability: !!can_update_gen} %>

<% if !defined?(model4ability) %>
  <% model4ability = model %>
<% end %>
<% show_editor_note = ((true == model4ability) || model4ability && can?(:update, model4ability)) %>
<% if !defined?(show_timestamp) %>
  <% show_timestamp = show_editor_note %>
<% end %>
<% if !defined?(show_weight) %>
  <% show_weight = true %>
<% end %>

<% if show_weight && show_editor_note && model.has_attribute?(:weight) %>
  <div class="editor_only weight">
  <dt class="item_weight">Weight:</dt>
    <dd class="item_weight"><%= model.weight %></dd>
  </div>
<% end %>

  <div> <%# Once dt is insde a div, all other dt-s must be inside a div, apparently. %>
  <dt class="item_note"><%= t("tables.note").capitalize %>:</dt>
    <dd class="item_note"><%= sanitized_html(auto_link(model.note)).html_safe %></dd>
  </div>

<% if show_editor_note && model.has_attribute?(:memo_editor) %>
  <div class="editor_only memo_editor">
  <dt class="item_memo_editor">Editor's memo:</dt>
    <dd class="item_memo_editor"><%= sanitized_html(auto_link(model.memo_editor)).html_safe %></dd>
  </div>
<% end %>

 <% if model.respond_to?(:create_user) && can?(:update, Users::EditRolesController) %>
   <% %w(create_user update_user).each do |metho| %>
   <div class="moderator_only">
    <dt class="item_id_<%= metho %>"><%= metho %>:</dt>
    <dd class="item_id_<%= metho %>"><%= ur = model.send(metho); link_to(ur.display_name, ur) if ur %></dd>
   </div>
   <% end %>
 <% end %>

  <% if show_editor_note && show_timestamp %>
    <div class="editor_only">
      <dt>updated_at:</dt>
        <dd><%= model.updated_at %> <span class="font-smaller" style="margin-left: 1em;">(<%= (model.updated_at && model.created_at && model.updated_at - model.created_at > 1.seconds) ? (Time.current - model.updated_at < 1.seconds ? "<strong>Updated now!</strong>".html_safe : "Updated since creation") : "Never modified since creation" %>)</span></dd>
    </div>
    <div class="editor_only"> <%# Once dt is insde a div, every single dt-s must be inside an independent div, apparently. %>
      <dt>created_at:</dt>
        <dd><%= model.created_at %></dd>
    </div>
  <% end %>
