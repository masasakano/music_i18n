<%# NOTE: Argument "models" should be an 2-element Array of base-model and merge-model %>

  <% if models[0].errors.any? || models[1].errors.any? %>
    <div id="error_explanation">
      <h2>merging failed:</h2>

      <ul>
        <% models.each do |eam| %>
          <li><%= errors.full_messages %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

<% is_music = (models[0].class == Music) %>
<% model_underscore = models[0].class.name.underscore %>
<% path_update = send(model_underscore.pluralize + "_update_merges_path", models[0]) %> <%# e.g., musics_update_merges_path() %>
<%= form_with(model: models[0], url: path_update, method: "patch") do |form| %>
  <%= form.hidden_field "other_"+model_underscore+"_id", value: models[1].id %>
<table>
  <thead>
    <tr><th></th>
      <% models[0..1].each do |em| %>
      <th>ID=<%= link_to em.id, send(model_underscore+"_path", em.id) %><br><%= em.title_or_alt %></th>
      <% end %>
      <th>Merged/結果</th>
  </thead>
  <tbody>
    <tr id="merge_edit_merge_to"><th>Merge to</th>
      <% models[0..1].each_index do |i| %>
      <td style="text-align: center;"><%= form.radio_button(BaseMergesController::FORM_MERGE[:to_index], i, checked: (i==all_checked_disabled[:to_index].checked_index)) %>
      </td>
      <% end %>
      <td class="merged_column" id="merged_to_id">ID=<%= merged_model.id %></td>
    </tr>
    <tr id="merge_edit_orig_language"><th>Orig-Language</th>
      <% labe = BaseMergesController::FORM_MERGE[:lang_orig] %>
      <% ch_dis = all_checked_disabled[:lang_orig] %>
      <% orig_trans0_exists = true %>
      <% models[0..1].each_with_index do |em, i| %>
      <td>
        <% trans = em.orig_translation %> <%# possibly nil %>
        <% orig_trans0_exists = false if i == 0 && !trans %>
        <% if trans %>
          <%= form.radio_button(labe, i, checked: (i == ch_dis.checked_index), disabled: ch_dis.disabled?) %>  <%# (i==0 || !orig_trans0_exists)) %>
          <% arstr = %i(title ruby romaji alt_title alt_ruby alt_romaji).map{|et| h(trans && trans.send(et) || "?")} %>
          <% alt_head = '<span class="font-smaller">['+h(t(:alt_title).capitalize)+']</span>' %>
          <% ruby_head = '<span class="font-smaller">'+h(t(:ruby_short).capitalize)+'</span>' %>
          <% str = sprintf("[%s] %s<br>#{ruby_head}(%s | %s)<br>#{alt_head} %s<br>#{ruby_head}(%s | %s)", trans.langcode, *arstr).html_safe %>
          <% form_val = i %>
          <%= form.label labe, str, :value => form_val %>
        <% end %>
        <%# NOTE: Radio buttons for orig_trans are never disabled. There may be only one button, leaving no choice to the user, but they are not disabled even in this case. For this reason, the hidden-field form is unnecessary. %>
      </td>
      <% end %>
      <td class="merged_column" id="merged_to_orig"><%= merged_model.hsmerged[:trans][:tr_orig_html] %> </td>
    </tr>

    <%#  ----------- translations ------------ %>
    <tr id="merge_edit_translations"><th title="<%= t('merges.edit.merge_if_possible', default: 'This row is automatically merged except for conflicting records.') %>"><%= t(:Translation, count: 2, default: 'Translations') %></th>
      <% labe = BaseMergesController::FORM_MERGE[:lang_trans] %>
      <% ch_dis = all_checked_disabled[:lang_trans] %>
      <% all_nulls = ch_dis.contents.all?{|j| j.blank?} %>
      <% models[0..1].each_with_index do |em, i| %>
      <td title="<%= t('merges.edit.merge_if_possible') %>">
        <% if !ch_dis.contents[i].blank? %>
          <%= form.radio_button(labe, i, checked: (i == ch_dis.checked_index), disabled: ch_dis.disabled?) %>
          <%= form.label(labe, ch_dis.contents[i], :value => i) %>
        <% end %>
        <% if ch_dis.disabled? && 1 == i && !all_nulls %>
          <%= form.hidden_field labe, value: ch_dis.checked_index %>
        <% end %>
      </td>
      <% end %>
      <td class="merged_column" id="merged_to_trans"><%= merged_model.hsmerged[:trans][:tr_html] %></td>
    </tr>

    <%#  ----------- engages ------------ %>
    <% engage_other_underscore = (is_music ? 'Artist' : 'Music').underscore %>
    <tr id="merge_edit_engages"><th title="<%= t('merges.edit.merge_if_possible', default: 'This row is automatically merged except for conflicting records.') %>">Engage-<%= engage_other_underscore.camelize.pluralize %></th>
      <% areng = (models+[merged_model]).map do |em| %>
        <% eng_mdls = (em.respond_to?(:hsmerged) ? em.hsmerged[:engage][:remained] : em.engages);
           str = eng_mdls.map{ |een|
             linkmodel = een.send(engage_other_underscore)
             linkpath = send(engage_other_underscore+"_path", linkmodel)
             sprintf(
                "%s (%s[r=%s] %s)",
                link_to(linkmodel.title_or_alt, linkpath),
                h(een.engage_how.title_or_alt(langcode: I18n.locale)),
                h(short_float_str(een.contribution, maxlength: 4, str_nil: "?")),
                h(een.year.blank? ? "Y=?" : een.year)
             )
           }.join("<br>")
           str.blank? ? nil : str.html_safe
        %>
      <% end %>
      <%
      disabled = (areng[0..1].compact.size == 1)
      checked  = (disabled ? areng[0..1].find_index{|i| i} : 0)
      %>
      <% if (areng[0..1].compact.size == 0) %>
        <td></td>
        <td></td>
        <td class="merged_column" id="merged_to_engages"></td>
      <% else %>
      <% ch_dis = all_checked_disabled[:engage] %>
      <% ch_dis.contents = areng %>
      <% labe = BaseMergesController::FORM_MERGE[:engage] %>
      <% all_nulls = ch_dis.contents.any?{|j| !j.blank?} %>
      <% areng[0..1].each_with_index do |engag, i| %>
      <td title="<%= t('merges.edit.merge_if_possible') %>">
        <% if !ch_dis.contents[i].blank? %>
          <%= form.radio_button(labe, i, checked: (i == ch_dis.checked_index), disabled: ch_dis.disabled?) %>
          <%= form.label(labe, ch_dis.contents[i], :value => i) %>
        <% end %>
        <% if ch_dis.disabled? && 1 == i && !all_nulls %>
          <%= form.hidden_field labe, value: ch_dis.checked_index %>
        <% end %>
      </td>
      <% end %>
      <% end %> <%# if (areng[0..1].compact.size == 0) %>
      <td class="merged_column" id="merged_to_engages"><%= areng[2] %></td>
    </tr>

    <%#  ----------- places ------------ %>
    <tr id="merge_edit_place"><th>Place < Prefecture</th>
      <% labe = BaseMergesController::FORM_MERGE[:prefecture_place] %>
      <% ch_dis = all_checked_disabled[:prefecture_place] %>
      <% models[0..1].each_with_index do |em, i| %>
      <td>
        <%= form.radio_button(labe, i, checked: (i==ch_dis.checked_index), disabled: ch_dis.disabled?) %>
        <% str = sprintf("%s &lt; %s (%s)", *([em.place, em.place.prefecture, em.place.country].map{|ep| h(ep.title_or_alt(langcode: I18n.locale).sub(/\A(どこか)(?:の場所|の都道府県)/, '不明').sub(/\A(Unknown)(Place|Prefecture)/, '\1'))})).html_safe %>
        <%= form.label labe, str, :value => i %>
        <% if ch_dis.disabled? && 1 == i %> <%# Place always has a value %>
          <%= form.hidden_field labe, value: ch_dis.checked_index %>
        <% end %>
      </td>
      <% end %>
      <% em = merged_model %>
      <% str = sprintf("%s &lt; %s (%s)", *([em.place, em.place.prefecture, em.place.country].map{|ep| h(ep.title_or_alt(langcode: I18n.locale).sub(/\A(どこか)(?:の場所|の都道府県)/, '不明').sub(/\A(Unknown)(Place|Prefecture)/, '\1'))})).html_safe %>
      <td class="merged_column" id="merged_to_place"><%= str %></td>
    </tr>
  <% if is_music %> <%# =========== Musics only ============ %>
    <%#  ----------- genres ------------ %>
    <tr id="merge_edit_genre"><th>Genre</th>
      <% labe = BaseMergesController::FORM_MERGE[:genre] %>
      <% ch_dis = all_checked_disabled[:genre] %>
      <% models[0..1].each_with_index do |em, i| %>
      <td>
        <%= form.radio_button(labe, i, checked: (i==ch_dis.checked_index), disabled: ch_dis.disabled?) %>
        <%= form.label labe, em.genre.title_or_alt(langcode: I18n.locale), :value => i %>
        <% if ch_dis.disabled? && 1 == i %> <%# Genre always has a value %>
          <%= form.hidden_field labe, value: ch_dis.checked_index %>
        <% end %>
      </td>
      <% end %>
      <td class="merged_column" id="merged_to_genre"><%= merged_model.genre.title_or_alt(langcode: I18n.locale) %></td>
    </tr>

    <%#  ----------- years ------------ %>
    <tr id="merge_edit_year"><th>Year</th>
      <% labe = BaseMergesController::FORM_MERGE[:year] %>
      <% ch_dis = all_checked_disabled[:year] %>
      <% models[0..1].each_with_index do |em, i| %>
      <td>
        <%= form.radio_button(labe, i, checked: (i==ch_dis.checked_index), disabled: ch_dis.disabled?) %>
        <%= form.label labe, em.year.inspect, :value => i %>
        <% if ch_dis.disabled? && 1 == i %>
          <%= form.hidden_field labe, value: ch_dis.checked_index %>
        <% end %>
      </td>
      <% end %>
      <td class="merged_column" id="merged_to_year"><%= merged_model.year.inspect %></td>
    </tr>
  <% else %> <%# if is_music %> <%# =========== non-Musics (Artists) only ============ %>
    <%#  ----------- sexes ------------ %>
    <tr id="merge_edit_sex"><th>Sex</th>
      <% labe = BaseMergesController::FORM_MERGE[:sex] %>
      <% ch_dis = all_checked_disabled[:sex] %>
      <% models[0..1].each_with_index do |em, i| %>
      <td>
        <%= form.radio_button(labe, i, checked: (i==ch_dis.checked_index), disabled: ch_dis.disabled?) %>
        <%= form.label labe, em.sex.title_or_alt(langcode: I18n.locale), :value => i %>
          <% if ch_dis.disabled? && 1 == i %> <%# Sex always has a value %>
            <%= form.hidden_field labe, value: ch_dis.checked_index %>
          <% end %>
      </td>
      <% end %>
      <td class="merged_column" id="merged_to_sex"><%= merged_model.sex.title_or_alt(langcode: I18n.locale) %></td>
    </tr>
    <%#  ----------- birthdays ------------ %>
    <tr id="merge_edit_birthday"><th>Birthday</th>
      <% labe = BaseMergesController::FORM_MERGE[:birthday] %>
      <% ch_dis = all_checked_disabled[:birthday] %>
      <% all_nulls = !models.any?{|em| em.any_birthdate_defined?} %>
      <% models[0..1].each_with_index do |em, i| %>
      <td>
        <% if em.any_birthdate_defined? %>
        <%= form.radio_button(labe, i, checked: (i==ch_dis.checked_index), disabled: ch_dis.disabled?) %>
          <%= form.label labe, em.birthday_string, :value => i %>
        <% end %>
        <% if ch_dis.disabled? && 1 == i && !all_nulls %>
          <%= form.hidden_field labe, value: ch_dis.checked_index %>
        <% end %>
      </td>
      <% end %>
      <td class="merged_column" id="merged_to_birthday"><%= merged_model.birthday_string %></td>
    </tr>

    <%#  ----------- wiki_ens ------------ %>
    <tr id="merge_edit_wiki_en"><th>Wikipedia[en]</th>
      <% labe = BaseMergesController::FORM_MERGE[:wiki_en] %>
      <% ch_dis = all_checked_disabled[:wiki_en] %>
      <% all_nulls = models.all?{|em| em.wiki_en.blank?} %>
      <% models[0..1].each_with_index do |em, i| %>
      <td>
        <% if !(str = em.wiki_en).blank?  %>
        <%= form.radio_button(labe, i, checked: (i==ch_dis.checked_index), disabled: ch_dis.disabled?) %>
          <%= form.label labe, str, :value => i %>
        <% end %>
        <% if ch_dis.disabled? && 1 == i && !all_nulls %>
          <%= form.hidden_field labe, value: ch_dis.checked_index %>
        <% end %>
      </td>
      <% end %>
      <td class="merged_column" id="merged_to_wiki_en"><%= merged_model.wiki_en %></td>
    </tr>

    <%#  ----------- wiki_jas ------------ %>
    <tr id="merge_edit_wiki_ja"><th>Wikipedia[ja]</th>
      <% labe = BaseMergesController::FORM_MERGE[:wiki_ja] %>
      <% ch_dis = all_checked_disabled[:wiki_ja] %>
      <% all_nulls = models.all?{|em| em.wiki_ja.blank?} %>
      <% models[0..1].each_with_index do |em, i| %>
      <td>
        <% if !(str = em.wiki_ja).blank?  %>
        <%= form.radio_button(labe, i, checked: (i==ch_dis.checked_index), disabled: ch_dis.disabled?) %>
          <%= form.label labe, str, :value => i %>
        <% end %>
        <% if ch_dis.disabled? && 1 == i && !all_nulls %>
          <%= form.hidden_field labe, value: ch_dis.checked_index %>
        <% end %>
      </td>
      <% end %>
      <td class="merged_column" id="merged_to_wiki_ja"><%= merged_model.wiki_ja %></td>
    </tr>
  <% end %> <%# -- else %> <%# -- if is_music %>

  <% if !is_music && models[0].respond_to?(:channel_owner) %> <%# =========== Artists only ============ %>
    <%#  ----------- ChannelOwner ------------ %>
    <tr id="merge_edit_channel_owners"><th title="<%= t('merges.edit.merge_always', default: 'This row is automatically merged.') %>"><%= t(:ChannelOwner) %></th>
      <% models[0..1].each_with_index do |em, i| %>
      <td title="<%= t('merges.edit.merge_always') %>">
        <% if (owner=em.channel_owner) %>
          <%= link_to t(:ChannelOwner), owner %>: 
          <%= channels2displayed_list(owner.channels) %>  <%# defined in artists_helper.rb %>
        <% end %>
      </td>
      <% end %>
      <td class="merged_column" id="merged_to_channel_owner"><%= channels2displayed_list(merged_model.hsmerged["channel"]["remained"]) if merged_model.hsmerged["channel"] %>
      </td>
    </tr>
  <% end %> <%# if !is_music %>

    <%#  ----------- ArtistMusicPlays ------------ %>
    <tr id="merge_edit_artist_music_plays"><th title="<%= t('merges.edit.merge_always', default: 'This row is automatically merged.') %>">Playing</th>
      <% metho = ((Music == models[0].class) ? "artist" : "music") %>
      <% models[0..1].each_with_index do |em, i| %>
      <td title="<%= t('merges.edit.merge_always') %>">
        <% ary = em.artist_music_plays.map{|em| [em.event_item.event, sprintf("%s (%s)", em.send(metho).title_or_alt(prefer_alt: true, langcode: I18n.locale, lang_fallback_option: :either, str_fallback: "", article_to_head: true), em.event_item.start_time.strftime("%Y-%m"))]} %>
        <%= ary.compact.map{|ea| link_to(ea[1], event_path(ea[0]))}.join(", ").html_safe %>
      </td>
      <% end %>
      <td class="merged_column" id="merged_to_artist_music_play"><% ary = merged_model.hsmerged[:artist_music_play][:remained].map{|em| [em.event_item.event, sprintf("%s (%s)", em.send(metho).title_or_alt(prefer_alt: true, langcode: I18n.locale, lang_fallback_option: :either, str_fallback: "", article_to_head: true), em.event_item.start_time.strftime("%Y-%m"))]} %>
        <%= ary.compact.map(&:last).join(", ").html_safe %>
      </td>
    </tr>

    <%#  ----------- HaramiVids ------------ %>
    <tr id="merge_edit_harami_vids"><th title="<%= t('merges.edit.merge_always', default: 'This row is automatically merged.') %>">HaramiVids</th>
      <% all_hvs = [] %>
      <% models[0..1].each_with_index do |em, i| %>
      <td title="<%= t('merges.edit.merge_always') %>">
        <% all_hvs.push em.harami_vids.ids.sort %>
        <%= all_hvs[-1].compact.map{|eid| link_to(eid, harami_vid_path(eid))}.join(", ").html_safe %>
      </td>
      <% end %>
      <td class="merged_column" id="merged_to_harami_vid"><%= all_hvs.flatten.sort.map(&:to_s).join(", ") %></td>
    </tr>

    <%#  ----------- Harami1129s ------------ %>
    <tr id="merge_edit_harami1129s"><th title="<%= t('merges.edit.merge_always', default: 'This row is automatically merged.') %>">Harami1129s</th>
      <% all_hvs = [] %>
      <% models[0..1].each_with_index do |em, i| %>
      <td title="<%= t('merges.edit.merge_always') %>">
        <% all_hvs.push em.harami1129s.ids.sort %>
        <%= all_hvs[-1].compact.map{|eid| link_to(eid, harami1129_path(eid))}.join(", ").html_safe %>
      </td>
      <% end %>
      <td class="merged_column" id="merged_to_harami1129"><%= all_hvs.flatten.sort.map(&:to_s).join(", ") %></td>
    </tr>

    <%#  ----------- notes ------------ %>
    <tr id="merge_edit_note"><th title="<%= t('merges.edit.merge_always', default: 'This row is automatically merged.') %>">Note</th>
      <% models[0..1].each_with_index do |em, i| %>
      <td title="<%= t('merges.edit.merge_always') %>">
        <%= em.note %>
      </td>
      <% end %>
      <td class="merged_column" id="merged_to_note"><%= merged_model.note %></td>
    </tr>
  </tbody>
</table>

  <div class="actions">
    <% path_reload = send(model_underscore.pluralize + "_edit_merges_path", models[0], other_artist_id: models[1].id) %> <%# e.g., musics_edit_merges_path() %>
    <%= form.submit t("Reload", default: "Reload"), formaction: path_reload, formmethod: "get" %>
  </div>
  <div class="actions">
  <%= submit_tag("Reset (Start Over)", { :name => 'reset', :id => 'reset_button', :type => "reset" }) %>
  </div>
  <div class="actions" style="margin-top: 1em">
    <%= form.submit t("Submit", default: "Submit") %>
  </div>
<% end %>

