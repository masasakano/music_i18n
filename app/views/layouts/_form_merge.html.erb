<%# NOTE: Argument "models" should be an 2-element Array of base-model and merge-model %>
<%#   Also, "trans_prms" should be given: see non_orig_translations_prms() in base_merges_controller.rb %>

  <% if models[0].errors.any? || models[1].errors.any? %>
    <div id="error_explanation">
      <h2>merging failed:</h2>

      <ul>
        <% models.each do |eam| %>
          <li><%= errors.full_messages %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

<% is_music = (models[0].class == Music) %>
<% model_underscore = models[0].class.name.underscore %>
<% path_update = send(model_underscore.pluralize + "_update_merges_path", models[0]) %> <%# e.g., musics_update_merges_path() %>
<%= form_with(model: models[0], url: path_update, method: "patch") do |form| %>
<table>
  <thead>
    <tr><th></th>
      <% models.each do |em| %>
      <th>ID=<%= link_to em.id, send(model_underscore+"_path", em.id) %><br><%= em.title_or_alt %></th>
      <% end %>
  </thead>
  <tbody>
    <tr><th>Merge to</th>
      <% models.each_index do |i| %>
      <td style="text-align: center;"><%= form.radio_button(BaseMergesController::FORM_MERGE[:to_index], i, checked: (i==0)) %>
      </td>
      <% end %>
    </tr>
    <tr><th>Orig-Language</th>
      <% labe = BaseMergesController::FORM_MERGE[:lang_orig] %>
      <% models.each_with_index do |em, i| %>
      <td>
        <%= form.radio_button(labe, i, checked: (i==0)) %>
        <% trans = em.orig_translation %>
        <% arstr = %i(title ruby romaji alt_title alt_ruby alt_romaji).map{|et| h(trans.send(et) || "?")} %>
        <% alt_head = '<span class="font-smaller">['+h(t(:alt_title).capitalize)+']</span>' %>
        <% ruby_head = '<span class="font-smaller">'+h(t(:ruby_short).capitalize)+'</span>' %>
        <% str = sprintf("[%s] %s<br>#{ruby_head}(%s | %s)<br>#{alt_head} %s<br>#{ruby_head}(%s | %s)", trans.langcode, *arstr).html_safe %>
        <%= form.label labe, str, :value => i %>
      </td>
      <% end %>
    </tr>
    <tr><th title="<%= t('merges.edit.merge_if_possible', default: 'This row is automatically merged except for conflicting records.') %>"><%= t(:Translation, count: 2, default: 'Translations') %></th>
      <% labe = BaseMergesController::FORM_MERGE[:lang_trans] %>
      <% models.each_with_index do |em, i| %>
      <td>
        <% trp = trans_prms[i] %>
        <%= form.radio_button(labe, i, checked: trp[:checked], disabled: trp[:disabled]) if trp[:exist] %>
        <% if trp[:exist] %>
          <%= form.label(labe, trp[:label_str], :value => i) %>
        <% else %>
          <span style="padding-left: 2em;"><%= trp[:label_str] %></span>
        <% end %>
      </td>
      <% end %>
    </tr>
    <% engage_other_underscore = (is_music ? 'Artist' : 'Music').underscore %>
    <tr><th title="<%= t('merges.edit.merge_if_possible', default: 'This row is automatically merged except for conflicting records.') %>">Engage-<%= engage_other_underscore.camelize.pluralize %></th>
      <% labe = BaseMergesController::FORM_MERGE[:engage] %>
      <% models.each_with_index do |em, i| %>
      <td title="<%= t('merges.edit.merge_if_possible') %>">
        <%= form.radio_button(labe, i, checked: (i==0)) %>
        <% str = em.engages.map{ |een|
             linkmodel = een.send(engage_other_underscore)
             linkpath = send(engage_other_underscore+"_path", linkmodel)
             sprintf(
                "%s (%s[r=%s] %s)",
                link_to(linkmodel.title_or_alt, linkpath),
                h(een.engage_how.title_or_alt(langcode: I18n.locale)),
                h(short_float_str(een.contribution, maxlength: 4, str_nil: "?")),
                h(een.year.blank? ? "Y=?" : een.year)
             )
           }.join("<br>").html_safe %>
        <%= form.label labe, str, :value => i %>
      </td>
      <% end %>
    </tr>
    <tr><th>Prefecture (Country)</th>
      <% labe = BaseMergesController::FORM_MERGE[:prefecture_place] %>
      <% hsstat = CheckedDisabled.new(models, :place) %>
      <% models.each_with_index do |em, i| %>
      <td>
        <%= form.radio_button(labe, i, checked: (i==hsstat.checked_index), disabled: hsstat.disabled?) %>
        <% str = sprintf("%s (%s)", h(em.place.prefecture.title_or_alt(langcode: I18n.locale)), h(em.place.country.title_or_alt(langcode: I18n.locale))).html_safe %>
        <%= form.label labe, str, :value => i %>
      </td>
      <% end %>
    </tr>
  <% if is_music %>
    <tr><th>Genre</th>
      <% labe = BaseMergesController::FORM_MERGE[:genre] %>
      <% hsstat = CheckedDisabled.new(models, :genre) %>
      <% models.each_with_index do |em, i| %>
      <td>
        <%= form.radio_button(labe, i, checked: (i==hsstat.checked_index), disabled: hsstat.disabled?) %>
        <%= form.label labe, em.genre.title_or_alt(langcode: I18n.locale), :value => i %>
      </td>
      <% end %>
    </tr>
    <tr><th>Year</th>
      <% labe = BaseMergesController::FORM_MERGE[:year] %>
      <% hsstat = CheckedDisabled.new(models, :year) %>
      <% models.each_with_index do |em, i| %>
      <td>
        <%= form.radio_button(labe, i, checked: (i==hsstat.checked_index), disabled: hsstat.disabled?) %>
        <%= form.label labe, em.year.inspect, :value => i %>
      </td>
      <% end %>
    </tr>
  <% else %>
    <tr><th>Sex</th>
      <% labe = BaseMergesController::FORM_MERGE[:sex] %>
      <% hsstat = CheckedDisabled.new(models, :sex) %>
      <% models.each_with_index do |em, i| %>
      <td>
        <%= form.radio_button(labe, i, checked: (i==hsstat.checked_index), disabled: hsstat.disabled?) %>
        <%= form.label labe, em.sex.title_or_alt(langcode: I18n.locale), :value => i %>
      </td>
      <% end %>
    </tr>
    <tr><th>Birthday</th>
      <% labe = BaseMergesController::FORM_MERGE[:birthday] %>
      <% hsstat = CheckedDisabled.new(models, :any_birthdate_defined?) %>
      <% models.each_with_index do |em, i| %>
      <td>
        <% if em.any_birthdate_defined? %>
          <%= form.radio_button(labe, i, checked: (i==hsstat.checked_index), disabled: hsstat.disabled?) %>
          <%= form.label labe, em.birthday_string, :value => i %>
        <% end %>
      </td>
      <% end %>
    </tr>
    <tr><th>Wikipedia[en]</th>
      <% labe = BaseMergesController::FORM_MERGE[:wiki_en] %>
      <% hsstat = CheckedDisabled.new(models, :wiki_en) %>
      <% models.each_with_index do |em, i| %>
      <td>
        <% if !(str = em.wiki_en).blank?  %>
          <%= form.radio_button(labe, i, checked: (i==hsstat.checked_index), disabled: hsstat.disabled?) %>
          <%= form.label labe, str, :value => i %>
        <% end %>
      </td>
      <% end %>
    </tr>
    <tr><th>Wikipedia[ja]</th>
      <% labe = BaseMergesController::FORM_MERGE[:wiki_ja] %>
      <% hsstat = CheckedDisabled.new(models, :wiki_ja)  %>
      <% models.each_with_index do |em, i| %>
      <td>
        <% if !(str = em.wiki_ja).blank?  %>
          <%= form.radio_button(labe, i, checked: (i==hsstat.checked_index), disabled: hsstat.disabled?) %>
          <%= form.label labe, str, :value => i %>
        <% end %>
      </td>
      <% end %>
    </tr>
  <% end %>
    <tr><th title="<%= t('merges.edit.merge_always', default: 'This row is automatically merged.') %>">Note</th>
      <% models.each_with_index do |em, i| %>
      <td title="<%= t('merges.edit.merge_always') %>">
        <%= em.note %>
      </td>
      <% end %>
    </tr>
  </tbody>
</table>

  <div class="actions">
    <%= form.submit t("Submit", default: "Submit") %>
  </div>
  <div class="actions">
  <%= submit_tag("Reset (Start Over)", { :name => 'reset', :id => 'reset_button', :type => "reset" }) %>
  </div>
<% end %>

