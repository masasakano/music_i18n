
<%# local variables: harami_vids, optional: event, musics (:all or Array or nil; musics to display), music (if for a particular Music - displaying timing), place, for_owner (Channel or ChannelOwner), can_update_hvids, canread_evit, can_read_h1129, canread_pla, canread_mus, evit_offset, with_place, with_place_public, stop_rows %>
<%# @example
      render partial: 'layouts/harami_vids_index', locals: {harami_vids: @music.harami_vids.order("harami_vids.release_date" => :desc).distinct, music: @music, with_place: false, for_owner: false }
 %>

<% if !defined?(musics)
     musics = :all
   end %>  <%# This has to be in multi-line (or in the ";" syntax), as opposed to the post-placed "if", because of "defined?" %>
<% if !defined?(music)
     music = nil
   else
     musics = nil
   end %>  <%# This has to be in multi-line (or in the ";" syntax), as opposed to the post-placed "if", because of "defined?" %>
<% if !defined?(with_place)
     with_place = nil
   end %>  <%# This has to be in multi-line (or in the ";" syntax), as opposed to the post-placed "if", because of "defined?" %>
<%
  if !defined? with_place_public 
    with_place_public = false
  end
%>
<% if !defined?(for_owner)
     for_owner = false
   end %>  <%# This has to be in multi-line (or in the ";" syntax), as opposed to the post-placed "if", because of "defined?" %>
<% if !defined?(can_update_hvids)
     can_update_hvids = can?(:update, HaramiVid)
   end %>  <%# This has to be in multi-line (or in the ";" syntax), as opposed to the post-placed "if", because of "defined?" %>
<% if !defined?(canread_evit)
     canread_evit = can?(:read, EventItem)
   end %>  <%# This has to be in multi-line (or in the ";" syntax), as opposed to the post-placed "if", because of "defined?" %>  <%# In future, this may be released public (if most EventItems are checked valid) %>
<% if !defined?(can_read_h1129)
     can_read_h1129 = can?(:read, Harami1129)
   end %>
<% if !defined?(canread_pla)
     canread_pla = can?(:read, Place)
   end %>  <%# This is usually public? %>
<% if !defined?(canread_mus)
     canread_mus = can?(:read, Music)
   end %> <%# This is usually public? %>
<% if !defined?(event)
     event = nil
   end %>  <%# This has to be in multi-line (or in the ";" syntax), as opposed to the post-placed "if", because of "defined?" %>
<% if !defined?(evit_offset)
     evit_offset = 0
   end %>  <%# This has to be in multi-line (or in the ";" syntax), as opposed to the post-placed "if", because of "defined?" %>
<% if !defined?(stop_rows)
     stop_rows = nil
   end %>  <%# This has to be in multi-line (or in the ";" syntax), as opposed to the post-placed "if", because of "defined?" %>
<% stop_rows ||= Float::INFINITY %>

<% event_items = [] %>

    <% ary = (harami_vids.respond_to?(:order) ? harami_vids.order(:release_date) :  harami_vids.sort{|a,b| a.release_date <=> b.release_date}) %> <%# ascending order %>
<% if false %>
    <% ary2 = nil %>
    <% if harami_vids.respond_to? :order %>
      <% begin %>
        <% (ary2 = harami_vids.order(release_date: :desc)).first.to_s %>
      <% rescue %>
        <% ary2 = nil %>
      <% end %>
    <% end %>
<% end %> <%# I don't understand this clause - the sentence below should actually fail with this, but it doesn't... I put it into if-false... %>
    <%# (ary &&= ary2).uniq.each do |harami_vid| %>
    <% ary.uniq.each_with_index do |harami_vid, i_row| %>
      <% break if i_row+1 > stop_rows %>
      <tr>
     <% if can_update_hvids %>
        <td class="number editor_only"><%= link_to harami_vid.id, harami_vid %></td>
     <% end %>
        <td class="date_ja"><%= sprintf "%s %s", date2text(harami_vid.release_date), ((dura=sec2hms_or_ms(harami_vid.duration, return_nil: true)) ? '('+dura+')' : "") %></td> <%# defined in ModuleCommon %>
     <% if for_owner %>
        <td><%= harami_vid.channel.channel_platform.title_or_alt(langcode: I18n.locale, lang_fallback_option: :either) %> </td> <%# prefer_shorter: false (Default) %>
        <td><%= harami_vid.channel.channel_type.title_or_alt(langcode: I18n.locale, lang_fallback_option: :either, prefer_shorter: true) %> </td>
     <% else %>
        <td><%= harami_vid.channel.channel_owner.title_or_alt(langcode: I18n.locale, lang_fallback_option: :either, prefer_shorter: true) %> </td>
        <td><%= harami_vid.channel.channel_platform.title_or_alt(langcode: I18n.locale, lang_fallback_option: :either) %> </td> <%# prefer_shorter: false (Default) %>
     <% end %>
     <% if music %>
       <% assoc = harami_vid.harami_vid_music_assocs.where(music: music).first %>
       <% timing = (assoc ? assoc.timing : nil) %>
     <% end %>
        <td><%= link_to_youtube harami_vid.title_or_alt(langcode: I18n.locale, lang_fallback_option: :either), harami_vid.uri, timing, title: t(:external_link) %></td>  <%# defined in app/helpers/application_helper.rb %>
     <% if musics %>
        <td><%= harami_vid.musics.map{ |music|
               next nil if :all != musics && !musics.include?(music)
               mu_tit = music.title_or_alt(lang_fallback_option: :either)
               (canread_mus ? link_to(mu_tit, music) : mu_tit)
             }.compact.join(t('comma')).html_safe %>
        </td>
     <% end %>
     <% if music %>
        <td class="number"><%= link_to_youtube sec2hms_or_ms(assoc.timing, return_if_zero: ""), harami_vid.uri, assoc.timing, title: t(:external_link) %></td> <%# defined in application_helper.rb %>
        <td class="number"><%= assoc.completeness %></td>
     <% end %>
     <% if with_place %>
        <td<%= ' class="editor_only"'.html_safe if !with_place_public %>><%= harami_vid.place ? harami_vid.txt_place_pref_ctry(without_country_maybe: true) : "" %>
          <% if can_update_hvids %>
            <%= html_consistent_or_inconsistent(harami_vid.is_place_all_consistent?(strict: true)) %>
          <% end %>
        </td>
     <% end %>
      <% if canread_evit %>
        <td class="text-center editor_only">
          <%= harami_vid.event_items.map{ |eei|
             next nil if event && event != eei.event
             if !(ind=event_items.find_index(eei))
               event_items << eei
               ind = event_items.size-1
             end
             ind += evit_offset + 1
             tit = sprintf("%s (ID=%d; Assoc-IDs=%s)", eei.machine_title, eei.id, HaramiVidEventItemAssoc.where(harami_vid: harami_vid, event_item: eei).order(:id).ids.inspect)
             link_to(ind.to_s, eei, title: tit)
             }.compact.join(t(:comma)).html_safe %>
        </td>
      <% end %>
     <% if can_read_h1129 %>
        <td class="number editor_only"><%= harami_vid.harami1129s.distinct.count %> / <%= harami_vid.musics.uniq.count %></td>
     <% end %>
        <td><%= auto_link50(harami_vid.note) %></td>

        <td class="actions"><%= link_to t("tables.Show"), harami_vid %></td>
      </tr>
    <% end %> <%# ary.uniq.each_with_index do |harami_vid, i_row| %>

