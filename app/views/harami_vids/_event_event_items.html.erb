<%# Local vairables: none %>
    <% canindex_evit = can? :index, EventItem %>
    <% canread_h1129 = can? :read, Harami1129 %>
    <% canedit_hvid = can? :edit, @harami_vid %>
    <ul>
    <% evevits = @event_event_items.map{|ek, ev| [Event.find(ek), ev] }.to_h %>
    <% evevits.each_pair do |event, ar_event_items| %>
      <li>
        <% event_title = event.title_or_alt(langcode: I18n.locale, lang_fallback_option: :either) %>
        <% if can? :read, event %>
          <%= link_to event_title, event %>
        <% else %>
          <%= event_title %>
        <% end %>
         [<%= event.event_group.title_or_alt(langcode: I18n.locale, lang_fallback_option: :either) %>]
        <ol class="list_event_items">
          <% ar_event_items.sort{|a,b|
               res = ((a.weight ? a.weight : Float::INFINITY) <=> (b.weight ? b.weight : Float::INFINITY))
               next res if res != 0
               res = ((a.start_time ? a.start_time : Float::INFINITY) <=> (b.start_time ? b.start_time : Float::INFINITY))
               next res if res != 0
               res = ((a.start_time_err ? a.start_time_err : Float::INFINITY) <=> (b.start_time_err ? b.start_time_err : Float::INFINITY))
             }.each_with_index do |event_item, eii| %>
            <li>
              <% if canindex_evit %>
                <%= t(:EventItem) %>
              <% end %>
              <% if canindex_evit %>  <%# Strictly, this should be: can? :show, event_item %>
                <% unknown_str = (event_item.unknown? ? ": Unknown" : "") %>
                <% tit = sprintf("%s (ID=%d; Assoc-IDs=%s)", event_item.machine_title, event_item.id, HaramiVidEventItemAssoc.where(harami_vid: @harami_vid, event_item: event_item).order(:id).ids.inspect) %>
                <%= link_to "(#{eii+1}#{unknown_str})", event_item, title: tit %>
              <% else %>
                (<%= eii+1 %>)
              <% end %>
              <%= t("harami_vids.show.artist_collabs", default: "featuring Artists") %>
              (<%= show_list_featuring_artists(event_item) %>)  <%# defined in harami_vids_helper.rb %>
              <span class="text-nowrap">
              <% if canedit_hvid %>
                <% tags = (((n_vids=event_item.harami_vids.distinct.count) > 1) ? ['<span class="lead text-red"><strong>', '</strong></span>'].map{|i| i.html_safe} : ["", ""])  %>
                <span class="editor_only">[#HaramiVid = <%= sprintf('%s%d%s', tags[0], n_vids, tags[1]).html_safe %>]</span>
              <% end %>
              <% if canread_h1129 %>
                <% tags = (((n_1129s=event_item.harami1129s.count) > 0) ? ['<span class="lead text-red"><strong>', '</strong></span>'].map{|i| i.html_safe} : ["", ""])  %>
                <span class="editor_only">[#Harami1129 = <%= sprintf('%s%d%s', tags[0], n_1129s, tags[1]).html_safe %>]</span>
              <% end %>
              <% if can?(:destroy_with_amps, event_item) && @harami_vid.event_items.uniq.size > 1 %>
                <span class="moderator_only">
                  [&nbsp;<%= link_to 'Destroy EventItem AND its associations', event_items_destroy_with_amp_url(event_item), method: :delete, data: { confirm: t('are_you_sure') }, title: 'May also destroy the parent Event if empty', class: "button_like" %>&nbsp;]
                </span>
              <% end %>
              </span>
              <% if event_item.artist_music_plays.exists? %>
                <%= render partial: "layouts/artist_music_plays", locals: {artist_music_plays: event_item.artist_music_plays, harami_vid: @harami_vid} %>
              <% end %>
            </li>
          <% end %>
        </ol>
      </li>
    <% end %>
    </ul>
