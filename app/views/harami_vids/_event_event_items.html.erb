<%# Assumed instance variables: @harami_vid, @event_event_items; local variables: (optional) sorted_event_event_items (sorted @event_event_items), from_non_turbo: Def(false) true if requested from show.html.erb %>

<% if !defined?(sorted_event_event_items)
     sorted_event_event_items = nil
   end %>
<% if !defined?(from_non_turbo)
     from_non_turbo = false
   end %>

<%= turbo_frame_tag "show_events_"+dom_id(@harami_vid) do %>
    <% sorted_event_event_items = sorted_event_event_items_by_timing(@harami_vid, @event_event_items) if sorted_event_event_items.blank? %> <%# defined in app/helpers/harami_vids_helper.rb %>
    <% def_artist = Artist.default(:HaramiVid) %>
    <% canindex_evit = can? :index, EventItem %>
    <% canread_h1129 = can? :read, Harami1129 %>
    <% canedit_hvid = can? :edit, @harami_vid %>
    <% canedit_evt = can? :edit, Event %>
    <% if !from_non_turbo && canedit_hvid %>  <%#  flash messages  %>
      <%= render partial: 'layouts/form_print_errors', locals: {model: @harami_vid, error_explanation_for_class: true} %>
      <%= render partial: "/layouts/flash_display" %>
    <% end %>
    <ul>
    <% evevits = sorted_event_event_items.map{|ek, ev| [Event.find(ek), ev] }.to_h %> <%# defined in HaramiVidsHelper, sorting the varible by Music timing %>
    <% evevits.each_pair do |event, ar_event_items| %>
      <li>
        <% event_title = event.title_or_alt(langcode: I18n.locale, lang_fallback_option: :either) %>
        <% if can? :read, event %>
          <%= link_to event_title, event %>
        <% else %>
          <%= event_title %>
        <% end %>
         [<%= event.event_group.title_or_alt(langcode: I18n.locale, lang_fallback_option: :either) %>]
         <% if canedit_evt %>
           <span class="editor_only">(<%= date2text(event.start_time.to_date) %>)</span> <%# defined in ModuleCommon %>
         <% end %>
        <ol class="list_event_items">
          <% ar_event_items.sort{|a,b|
               res = ((a.weight ? a.weight : Float::INFINITY) <=> (b.weight ? b.weight : Float::INFINITY))
               next res if res != 0
               res = ((a.start_time ? a.start_time : Float::INFINITY) <=> (b.start_time ? b.start_time : Float::INFINITY))
               next res if res != 0
               res = ((a.start_time_err ? a.start_time_err : Float::INFINITY) <=> (b.start_time_err ? b.start_time_err : Float::INFINITY))
             }.each_with_index do |event_item, eii| %>
            <li>
              <% if canindex_evit %>
                <%= t(:EventItem) %>
              <% end %>
              <% link_txt_extra = "" %>
              <% if canindex_evit %>  <%# Strictly, this should be: can? :show, event_item %>
                <% link_txt_extra = ": " + trimmed_event_item_machine_title_to_display(event_item) %> <%# defined in harami_vids_helper.rb %>
                <% tit = sprintf("%s (ID=%d; Assoc-IDs=%s)", event_item.machine_title, event_item.id, HaramiVidEventItemAssoc.where(harami_vid: @harami_vid, event_item: event_item).order(:id).ids.inspect) %>
                (<%= eii+1 %><span class="editor_only"><%= link_to "#{link_txt_extra}", event_item, title: tit %></span>)
              <% else %>
                (<%= eii+1 %>)
              <% end %>
              <% n_amps = event_item.artist_music_plays.count %>
              <% if n_amps > 1 && canedit_hvid &&  %>
                <span class="editor_only">
                  <%= button_to t("harami_vids.Duplicate"), event_items_deep_duplicates_url, form_class: "button_to inline_form", method: :post, params: { event_item: { deep_duplicates_controller: {event_item_id: event_item.id, harami_vid_id: @harami_vid.id} } } %>
                </span>
              <% end %>
              <%= t("harami_vids.show.artist_collabs", default: "featuring Artists") %>
              (<%= show_list_featuring_artists(event_item) %>)  <%# defined in harami_vids_helper.rb %>
               <% if @harami_vid.release_date && event_item.start_time && event_item.start_time_err && (event_item.start_time_err < 604800) %>
                 (<%= date2text(event_item.start_time.to_date) %>) <%# defined in ModuleCommon %>
               <% elsif canedit_evt %>
                 <span class="editor_only">
                 (<%= date2text(event_item.start_time.to_date) %>) <%# defined in ModuleCommon %>
                 </span>
               <% end %>
              <span class="text-nowrap">
              <% if canedit_hvid %>
                <% tags = (((n_vids=event_item.harami_vids.distinct.count) > 1) ? ['<span class="lead text-red"><strong>', '</strong></span>'].map{|i| i.html_safe} : ["", ""])  %>
                <span class="editor_only">[#HaramiVid = <%= sprintf('%s%d%s', tags[0], n_vids, tags[1]).html_safe %>]</span>
              <% end %>
              <% if canread_h1129 %>
                <% tags = (((n_1129s=event_item.harami1129s.count) > 0) ? ['<span class="lead text-red"><strong>', '</strong></span>'].map{|i| i.html_safe} : ["", ""])  %>
                <span class="editor_only">[#Harami1129 = <%= sprintf('%s%d%s', tags[0], n_1129s, tags[1]).html_safe %>]</span>
              <% end %>
              <% if canindex_evit %>
                <span class="editor_only">
                  <% word = ((!@harami_vid.place || @harami_vid.place.encompass?(event_item.place)) ? "consistent" : '<span class="lead text-red"><strong>INCONSISTENT</strong></span>'.html_safe) %>
                  [<%= word %>: <%= show_pref_place_country(event_item.place) %>]
                </span>
              <% end %>
              <% if can?(:destroy_with_amps, event_item) && @harami_vid.event_items.uniq.size > 1 %>
                <span class="moderator_only">
                  [&nbsp;<%= link_to 'Destroy EventItem AND its associations', event_items_destroy_with_amp_url(event_item), method: :delete, data: { confirm: t('are_you_sure') }, title: 'May also destroy the parent Event if empty', class: "button_like" %>&nbsp;]
                </span>
              <% end %>
              <% if can?(:update, event_item) && event_item.harami_vids.uniq.size == 1 && event_item.siblings(exclude_unknown: true).exists? %>
                <span class="editor_only associate_to_new_event">
                  [&nbsp;<%= link_to 'Associate to a new Event', event_items_resettle_new_event_url(event_item), method: :patch, data: { confirm: t('are_you_sure') }, title: 'Creating a new Event and associating this EventItem to it.', class: "button_like" %>&nbsp;]
                </span>
              <% end %>
              </span>
              <% if 0 != n_amps %>  <%# if event_item.artist_music_plays.exists? %>
                <%= render partial: "layouts/artist_music_plays", locals: {artist_music_plays: event_item.artist_music_plays, harami_vid: @harami_vid} %>
              <% end %>
              <% if canedit_hvid && !(all_missings=missing_musics_from_evits(harami_vid: @harami_vid, artist: def_artist)).empty? %>
                <div class="add_missing_musics editor_only">
                  <p class="add_missing_musics editor_only lead"><strong>Missing Musics in EventItem-<%= def_artist.title_or_alt(langcode: I18n.locale, lang_fallback_option: :either) %></strong></p>
                  <%  set_missing_music_ids(all_missings, harami_vid: @harami_vid) %> <%# defined in HaramiVids::AddMissingMusicToEvitsHelper %>
                  <%= simple_form_for @harami_vid, method: :patch, url: harami_vids_add_missing_music_to_evit_url(@harami_vid) do |f1| %>
                    <%= f1.simple_fields_for :add_missing_music_to_evit do |f2| %>
                      <%= f2.input :musics_event_item_id, as: :hidden, input_html: { value: event_item.id } %>
                      <%# f2.input :missing_music_ids, as: :check_boxes, collection: collection_missing_musics(all_missings), multiple: true, item_wrapper_class: 'inline' %> <%# defined in HaramiVids::AddMissingMusicToEvitsHelper %>
                      <%= f2.collection_check_boxes :missing_music_ids, collection_missing_musics(all_missings), :last, :first, checked: @harami_vid.missing_music_ids %> <%# defined in HaramiVids::AddMissingMusicToEvitsHelper %>
                    <% end %>
                    <%= f1.submit sprintf("Add Musics to this EventItem (%s) for %s", event_item.id, def_artist.title_or_alt(langcode: I18n.locale, lang_fallback_option: :either)) %>
                  <% end %>
                </div>
              <% end %>
              <% if !from_non_turbo && canedit_hvid %>
                <%= render partial: 'layouts/form_print_errors', locals: {model: @harami_vid, error_explanation_for_class: true} %>
                <%= render partial: "/layouts/flash_display" %>
              <% end %>
            </li>
          <% end %>
        </ol>
      </li>
    <% end %>
    </ul>
<% end %>
