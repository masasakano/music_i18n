
<%= render partial: 'layouts/form_print_errors', locals: {model: harami_vid} %>

<% if ! harami_vid.new_record? %>
<hr>
<% end %>
<section id="sec_primary">
<% if ! harami_vid.new_record? %>
<%= render partial: 'layouts/all_registered_translations', locals: {model: harami_vid, add_buttons: true} %>
<hr>

<h2>Unique parameters</h2>
<% end %>

<div id="form_main">

<% given_ref_id = harami_vid.reference_harami_vid_id %>
<% given_ref = (given_ref_id.present? ? HaramiVid.find(given_ref_id) : nil) %>

<%= simple_form_for(harami_vid) do |f| %>
 <section id="sec_primary_input">
  <% if harami_vid.new_record? %>
    <%= render partial: 'layouts/partial_new_translations', locals: {form: f, model: harami_vid, trans: Translation.new, disable_is_orig: true, is_simple_form: true, only_title: true } %>
  <% end %>
  <div class="form-inputs">

    <%= f.input :uri, required: true, placeholder: 'URI/URL ('+t(:eg_independent)+'"3CjLiqDJ0C4" with or without youtu.be/)', as: :url,
      hint: t("harami_vids.field_uri_hint"),
      input_html: {value: (uri=harami_vid.uri) ? ApplicationHelper.uri_youtube(uri, long: false, with_http: true) : nil } %>
    <%= f.input :release_date,   label: t("harami_vids.table_head_date"), start_year: 2019, end_year: (Date.today.year+1) %>
    <%= f.input :duration,   label: t("harami_vids.field_Duration_in_sec"), placeholder: t(:eg_independent)+'72 ['+t(:s_time)+']'+t(:or)+' 01:12', as: :string %>
  <%= render partial: "layouts/select_country_prefecture_place", locals: {form: f, model: harami_vid, is_simple_form: true} %>

  <% if ! harami_vid.new_record? %>
    <h5 class="channel_part">Current Channel name: &ldquo;<%= link_to(harami_vid.channel.title_or_alt(lang_fallback_option: :either), channel_path(harami_vid.channel)) %>&rdquo;</h5>
  <% end %> 
    <%= f.input :form_channel_owner,
      collection: ordered_models_form(ChannelOwner), include_blank: false,
      selected: (harami_vid.form_channel_owner || harami_vid.channel && harami_vid.channel.channel_owner.id ||  ChannelOwner.default(:HaramiVid).id),
      label: t(:ChannelOwner), hint: (can?(:create, ChannelOwner)    ? t("layouts.fields.hint_create_if_non_existent", link: link_to(t("layouts.do_create_lower"), new_channel_owner_path, title: "New Channel")).html_safe : "") %>
    <div class="form_new_model_info">
    <%= f.input :form_channel_platform,
      collection: ordered_models_form(ChannelPlatform), include_blank: false,
      selected: (harami_vid.form_channel_platform || harami_vid.channel && harami_vid.channel.channel_platform.id ||  ChannelPlatform.default(:HaramiVid).id),
        label: t(:ChannelPlatform) %>  <%# NOTE: Here gives no hint to prompt a user to create a new one (like ChannelType), because HaramiVid should not need so many ChannelPlatform - appropriate moderators can create one by directly jumping to it anyway without being prompted here. %>
    <%= f.input :form_channel_type, include_blank: false,
      collection: ordered_models_form(ChannelType),
      label: t(:ChannelType),
      selected: (harami_vid.form_channel_type || harami_vid.channel && harami_vid.channel.channel_type.id || ChannelType.default(:HaramiVid).id)
       %>
    </div>

<% if harami_vid.new_record? && !(given_ref && given_ref.event_items.exists?) %> <%# For update, the following is never displayed; for create, it usually is unless a reference HaramiVid is specified and it has an EventItem(s) %>
  <%# For update, the same field appears immediately above a new Artist-collab. The reasons are (1) for a new record, EventItem is a must (unless a reference is given), (2) for update, a new EventItem is not often wanted unless the editor wants to associate a Music and maybe a new Artist-collab. %>
    <%= f.input :form_new_event,
      collection: form_selct_collections(Event.left_joins(:place).order(:start_time, :event_group_id, "places.prefecture_id", "places.id")), include_blank: true,
      selected: (harami_vid.form_new_event || (harami_vid.new_record? ? Event.default(:HaramiVid).id : nil)),
      label: (harami_vid.new_record? ? "" : t(:additional).capitalize+" ")+t(:Event),
      input_html: { multiple: false } %>
<% end %>

    <%= render partial: 'layouts/form_note_memo_editor', locals: {form: f, model4ability: HaramiVid, skip_ability_check: true} %>

  <div class="form-actions">
    <%= f.submit %>
  </div>
  <div class="actions">
  <%= submit_tag(t("layouts.reset_button"), { :name => 'reset', :id => 'reset_button', :type => "reset" }) %>
  </div>

<hr>
<section id="form_harami_vid_contents">
<h2>Contents</h2>

    <%= f.input :reference_harami_vid_kwd, as: :hidden %>
    <%= f.input :reference_harami_vid_id,  as: :hidden %>

  <% display_new_event_item_form = !harami_vid.new_record? %>
  <% if !harami_vid.new_record? || (given_ref && given_ref.event_items.exists?) %> <%# For update, the following is always displayed; for create, it is only if reference HaramiVid is specified and it has an EventItem(s) %>
    <% display_new_event_item_form = false %>  <%# This variable will be potentially modified below. %>
    <% sorted_event_event_items = sorted_event_event_items_by_timing(harami_vid, @event_event_items) if !@event_event_items.blank? %> <%# defined in app/helpers/harami_vids_helper.rb %>

    <section id="form_update_event_item_association_field">
    <div class="update_event_item_association_field">
    <h4><%= t("harami_vids.associated_event_event_items") %></h4>

    <% collec = get_event_items_relation_from_harami_vid(harami_vid, given_ref, sorted_event_event_items) %> <%# defined in app/helpers/harami_vids_helper.rb %>

     <%# In rare cases where there are duplications between the existing and specified EventItems, they will be shown as "distinct" is (so far) not performed here. %>
    <% if collec.exists? %>
     <%= f.association :event_items, collection: collec, label_method: :machine_title, value_method: :id,
      include_blank: false,  as: :check_boxes, label: t("EventItems"),
      item_wrapper_class: 'inline', input_html: { checked: true } %>  <%# Not shown at all if there are no EventItems associatined to harami_vid; they all are forcibly checked in default, even after returning to the edit screen.  %>
  <%# cf. https://github.com/heartcombo/simple_form#collection-check-boxes %>
     <%= render partial: "harami_vids/event_event_items", locals: {sorted_event_event_items: sorted_event_event_items} %> <%# "harami_vids/" required for access from HaramiVids::FetchYoutubeDataController %>
    <% else %>
      <% display_new_event_item_form = true %>
      Strangely, no existing items are defined. Please register a new Event(Item) below.
    <% end %>
    </div>
    </section>  <!-- section id="form_update_event_item_association_field" -->
  <% end %> <%# if !harami_vid.new_record? || (given_ref && given_ref.event_items.exists?) %>

  <% if !given_ref %>
    <!-- New EventItem -->
    <%= render partial: 'form_add_evit_music_collab', locals: {f: f, harami_vid: harami_vid, sorted_event_event_items: sorted_event_event_items, display_new_event_item_form: display_new_event_item_form } %>
  <% end %>  <!-- if !given_ref -->
  </section> <!-- section id="form_harami_vid_contents" -->
  </div> <!-- div class="form-inputs" -->

  <div class="form-actions">
    <%= f.submit %>
  </div>
  <div class="actions">
  <%= submit_tag(t("layouts.reset_button"), { :name => 'reset', :id => 'reset_button2', :type => "reset" }) %>
  </div>

 </section> <!-- section id="sec_primary_input" -->
<% end %> <%# simple_form_for(harami_vid) do |f| %>

</div> <!-- div id="form_main" -->

</section> <!-- section id="sec_primary" -->

  <% if can? :destroy, harami_vid %>
    <div class="actions text-end">
      <%= button_to "Destroy", harami_vid, method: :delete, data: { confirm: t('are_you_sure') } %>
    </div>
  <% end %>

<% if ! harami_vid.new_record? %>
<hr>
<%= render partial: 'harami_vids/music_table', locals: {harami_vid: harami_vid, add_buttons: true} %> <%# "harami_vids/" required for access from HaramiVids::FetchYoutubeDataController %>

<% end %>

<% if ! harami_vid.new_record? %>
<hr>
<%= render partial: 'harami_vids/other_harami_vids_table', locals: {harami_vid: harami_vid, mark_self: true, max_nrows: Rails.configuration.max_harami_vids_per_event_editor } %> <%# NOTE: harami_vid is guaranteed not to be a new_record %>
<hr>
<%= render partial: 'harami_vids/harami1129_table', locals: {harami_vid: harami_vid, add_buttons: true} %>
<hr>
<% end %>

